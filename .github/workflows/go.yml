name: Go CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.54.2
          golangci-lint --version

      - name: Run golangci-lint
        run: golangci-lint run

  test:
    name: Test
    needs: lint
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin123
          POSTGRES_DB: stockdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Install dependencies
        run: go mod download

      - name: Set up environment variables
        run: |
          echo "DB_HOST=localhost" >> $GITHUB_ENV
          echo "DB_PORT=5432" >> $GITHUB_ENV
          echo "DB_USER=admin" >> $GITHUB_ENV
          echo "DB_PASSWORD=admin123" >> $GITHUB_ENV
          echo "DB_NAME=stockdb" >> $GITHUB_ENV
          echo "SERVICE_PORT=3000" >> $GITHUB_ENV
          echo "HQ_END_POINT=http://localhost:8080" >> $GITHUB_ENV
          echo "HQ_BASIC_AUTHORIZATION=Basic dXNlcjpwYXNz" >> $GITHUB_ENV

      - name: Run Tests with Coverage
        run: |
          go test ./... -coverprofile=coverage.out
          go tool cover -func=coverage.out

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.out
